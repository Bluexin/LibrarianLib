buildscript {
    ext.kotlin_version = '1.0.2'
    ext.gdxVersion = '1.9.4'
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'

allprojects {
    tasks.withType(JavaCompile) {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = "${config.version}.${config.build_number}"
group = config.group
archivesBaseName = config.mod_name

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"
    mappings = config.mc_mappings

    replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version

    replaceIn 'LibMisc.kt'
}

configurations {

    required
    compile.extendsFrom(required)
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    required "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    //compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    //compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    //compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
}

jar {
    // We need to make sure we package kotlin runtimes.

    archiveName "${archivesBaseName}-${version}.jar"
    dependsOn configurations.compile
    from {
        configurations.required.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

sourceSets { main.java.srcDirs += 'src/main/kotlin' }
idea {
    module {
        inheritOutputDirs = true
    }
    project {
        languageLevel = '1.8'
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: "file://" + System.getenv("local_maven"))
			pom {
				groupId = project.group
				version
				artifactId = project.archivesBaseName
				project {
					name project.archivesBaseName
					packaging 'jar'
					description 'CraftTweaker'
					url 'https://github.com/jaredlll08/CraftTweaker'
					scm {
						url 'https://github.com/jaredlll08/CraftTweaker.git'
						connection 'scm:git:git@github.com:jaredlll08/CraftTweaker.git'
						developerConnection 'scm:git:git@github.com:jaredlll08/CraftTweaker.git'
					}
					issueManagement {
						system 'github'
						url 'https://github.com/jaredlll08/CraftTweaker/issues'
					}
					developers {
						developer {
							id 'Jared'
							name 'Jared'
							roles { role 'developer' }
						}
					}
				}
			}
		}
	}
}